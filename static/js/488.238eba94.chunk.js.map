{"version":3,"file":"static/js/488.238eba94.chunk.js","mappings":"6PACA,EAAuB,2BAAvB,EAA0D,4B,UCI7CA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAgCC,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,MAAO,KACPC,GAAAC,EAAAA,EAAAA,GAAAR,EAAA,GANKS,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GAQtBI,EAAe,SAAAC,GACnB,IAAAC,EAAwBD,EAAEE,OAAlBZ,EAAIW,EAAJX,KAAMa,EAAKF,EAALE,MACdL,GAAY,SAAAM,GAAY,IAAAC,EAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBF,GAAY,IAAAC,EAAA,IAAAE,EAAAA,EAAAA,GAAAF,EACdf,EAAOa,IAAKI,EAAAA,EAAAA,GAAAF,EAAC,QACP,IAAEA,GAAA,GAEb,EAuCA,OACEG,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAUC,SAtCR,SAAAX,GACnBA,EAAEY,iBACF,IAAQtB,EAA2CO,EAA3CP,KAAMC,EAAqCM,EAArCN,MAAOC,EAA8BK,EAA9BL,SACjBA,IAD+CK,EAApBJ,kBAW7BD,EAASqB,OAAS,IACjB,QAAQC,KAAKtB,IACb,KAAKsB,KAAKtB,IACV,iBAAiBsB,KAAKtB,IAUzBN,GAAS6B,EAAAA,EAAAA,IAAS,CAAEzB,KAAAA,EAAMC,MAAAA,EAAOC,SAAAA,KAEjCM,EAAY,CACVR,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,gBAAiB,GACjBC,MAAO,MAfPI,GAAY,SAAAM,GAAY,OAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBF,GAAY,IACfV,MACE,4HAA0H,IAjB9HI,GAAY,SAAAM,GAAY,OAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBF,GAAY,IACfV,MAAO,0BAAwB,GA6BrC,EAGqDsB,aAAa,MAAKC,SAAA,EACnET,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUO,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,OACL7B,KAAK,OACLa,MAAON,EAASP,KAChB8B,SAAUrB,QAGdS,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUO,SAAA,CAAC,SAE3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,QACL7B,KAAK,QACLa,MAAON,EAASN,MAChB6B,SAAUrB,QAGdS,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUO,SAAA,CAAC,YAE3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACL7B,KAAK,WACLa,MAAON,EAASL,SAChB4B,SAAUrB,QAGdS,EAAAA,EAAAA,MAAA,SAAOC,UAAWC,EAAUO,SAAA,CAAC,oBAE3BC,EAAAA,EAAAA,KAAA,SACEC,KAAK,WACL7B,KAAK,kBACLa,MAAON,EAASJ,gBAChB2B,SAAUrB,OAGbF,EAASH,QAASwB,EAAAA,EAAAA,KAAA,KAAGG,MAAO,CAAEC,MAAO,OAAQL,SAAEpB,EAASH,SACzDwB,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQF,SAAC,eAG5B,ECzFA,EAXqB,WACnB,OACET,EAAAA,EAAAA,MAACe,EAAAA,GAAc,CAAAN,SAAA,EACbC,EAAAA,EAAAA,KAACM,EAAAA,GAAM,CAAAP,UACLC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBAETC,EAAAA,EAAAA,KAACjC,EAAY,MAGnB,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"label\":\"RegisterForm_label__4pTXF\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from '../../redux/auth/authOperations';\nimport css from './RegisterForm.module.css';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    error: '',\n  });\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevFormData => ({\n      ...prevFormData,\n      [name]: value,\n      error: '', // Clear any previous error when input changes\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const { name, email, password, confirmPassword } = formData;\n    if (password !== confirmPassword) {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        error: 'Passwords do not match',\n      }));\n      return;\n    }\n\n    // Password validation checks\n    if (\n      password.length < 8 ||\n      !/[A-Z]/.test(password) ||\n      !/\\d/.test(password) ||\n      !/^[a-zA-Z0-9]+$/.test(password)\n    ) {\n      setFormData(prevFormData => ({\n        ...prevFormData,\n        error:\n          'Password should be at least 8 characters, contain at least 1 capital letter, and be a combination of letters and numbers',\n      }));\n      return;\n    }\n\n    dispatch(register({ name, email, password }));\n    // Clear form fields after submission\n    setFormData({\n      name: '',\n      email: '',\n      password: '',\n      confirmPassword: '',\n      error: '',\n    });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n      <label className={css.label}>\n        Username\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={formData.name}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label}>\n        Email\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label}>\n        Password\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n        />\n      </label>\n      <label className={css.label}>\n        Confirm Password\n        <input\n          type=\"password\"\n          name=\"confirmPassword\"\n          value={formData.confirmPassword}\n          onChange={handleChange}\n        />\n      </label>\n      {formData.error && <p style={{ color: 'red' }}>{formData.error}</p>}\n      <button type=\"submit\">Register</button>\n    </form>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst RegisterPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </HelmetProvider>\n  );\n};\n\nexport default RegisterPage;\n"],"names":["RegisterForm","dispatch","useDispatch","_useState","useState","name","email","password","confirmPassword","error","_useState2","_slicedToArray","formData","setFormData","handleChange","e","_e$target","target","value","prevFormData","_objectSpread2","_objectSpread","_defineProperty","_jsxs","className","css","onSubmit","preventDefault","length","test","register","autoComplete","children","_jsx","type","onChange","style","color","HelmetProvider","Helmet"],"sourceRoot":""}