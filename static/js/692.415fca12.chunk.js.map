{"version":3,"file":"static/js/692.415fca12.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/filter/filterSelectors.js","redux/contacts/contactsSelectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactListItem/ContactListItem.module.css?fe27","components/ContactList/ContactListItem/ContactListItem.jsx","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formField\":\"ContactForm_formField__O5fo+\",\"formLabel\":\"ContactForm_formLabel__TSwxK\",\"formButton\":\"ContactForm_formButton__TN6Jq\"};","export const selectFilter = state => state.filter.filterValue;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/filterSelectors';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsOperation';\nimport { selectContacts } from '../../redux/contacts/contactsSelectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChange = e => {\n    setName(e.target.value);\n  };\n\n  const handleNumberChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name.trim() === '' || number.trim() === '') {\n      return;\n    }\n\n    const existingContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (existingContact) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n\n    // dispatch(addContact({ name: name, number: number }));\n    dispatch(addContact({ name, number }));\n\n    // Reset Form Fields upon submitting\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formField}>\n        <p className={css.formLabel}>Name</p>\n        <input\n          type=\"text\"\n          name=\"name\"\n          // add \\ before - in [' \\-] to make it work (LMS)\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n          required\n          value={name}\n          onChange={handleNameChange}\n        />\n      </label>\n\n      <label className={css.formField}>\n        <p className={css.formLabel}>Number</p>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          // add \\ before - in [\\-.\\s] to make it work (LMS)\n          pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={handleNumberChange}\n        />\n      </label>\n      <button className={css.formButton} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Filter_container__L5eml\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/filter/filterSlice';\nimport { selectFilter } from '../../redux/filter/filterSelectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleFilterChange = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <div className={css.container}>\n      <p>Find Contacts by Name</p>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search by name\"\n        value={filter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactListItem\":\"ContactListItem_contactListItem__21QwY\"};","import { FaTrash } from 'react-icons/fa';\nimport css from './ContactListItem.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../../redux/contacts/contactsOperation';\n\nexport const ContactListItem = ({ filteredContact }) => {\n  const dispatch = useDispatch();\n\n  // handleDelete method\n  const handleDelete = () => {\n    dispatch(deleteContact(filteredContact.id));\n  };\n\n  return (\n    <li className={css.contactListItem}>\n      <p>{filteredContact.name}:</p>\n      <p>{filteredContact.number}</p>\n      <button onClick={handleDelete}>\n        <FaTrash />\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  filteredContact: PropTypes.object.isRequired,\n};\n","import { PacmanLoader } from 'react-spinners';\n\nexport const Loader = () => {\n  return <PacmanLoader color=\"#4ae8a4c3\" />;\n};\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\n// prettier-ignore\nimport { selectFilteredContacts, selectError, selectIsLoading } from '../../redux/contacts/contactsSelectors';\nimport { fetchContacts } from '../../redux/contacts/contactsOperation';\nimport { ContactListItem } from './ContactListItem/ContactListItem';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul>\n      {isLoading && !error && <Loader />}\n\n      {!isLoading && !error && filteredContacts.length === 0 && (\n        <p>The Phonebook is empty. Please add a contact</p>\n      )}\n\n      {!isLoading &&\n        !error &&\n        filteredContacts.length > 0 &&\n        filteredContacts.map(filteredContact => (\n          <ContactListItem\n            key={filteredContact.id}\n            filteredContact={filteredContact}\n          />\n        ))}\n    </ul>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\n\nconst ContactsPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </HelmetProvider>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectFilter","state","filter","filterValue","selectContacts","contacts","items","selectError","error","selectIsLoading","isLoading","selectFilteredContacts","createSelector","_ref","name","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","_jsxs","className","css","onSubmit","e","preventDefault","trim","find","contact","alert","concat","addContact","children","_jsx","type","pattern","title","required","value","onChange","target","Filter","placeholder","setFilter","ContactListItem","filteredContact","onClick","deleteContact","id","FaTrash","Loader","PacmanLoader","color","ContactList","filteredContacts","useEffect","fetchContacts","length","map","HelmetProvider","Helmet"],"sourceRoot":""}